#include <unity.h>

#include "gbt.h"
#include "mylog.h"

#define TEST_MEMORY_LOOPS 1000
#define TEST_MEMORY_LOOPS_INTMAX 4294967295

#define GBTARRAY_SIZE 364

const uint8_t gbtArray2[GBTARRAY_SIZE] = {
    0x0f, 0x00, 0x08, 0x3d, 0x65, 0x0c, 0x07, 0xe6, 
    0x0c, 0x1a, 0x01, 0x01, 0x1e, 0x23, 0xff, 0x80, 
    0x00, 0x00, 0x02, 0x0f, 0x01, 0x0f, 0x02, 0x04, 
    0x12, 0x00, 0x28, 0x09, 0x06, 0x00, 0x08, 0x19, 
    0x09, 0x00, 0xff, 0x0f, 0x02, 0x12, 0x00, 0x00, 
    0x02, 0x04, 0x12, 0x00, 0x28, 0x09, 0x06, 0x00, 
    0x08, 0x19, 0x09, 0x00, 0xff, 0x0f, 0x01, 0x12, 
    0x00, 0x00, 0x02, 0x04, 0x12, 0x00, 0x01, 0x09, 
    0x06, 0x00, 0x00, 0x60, 0x01, 0x00, 0xff, 0x0f, 
    0x02, 0x12, 0x00, 0x00, 0x02, 0x04, 0x12, 0x00, 
    0x03, 0x09, 0x06, 0x01, 0x00, 0x01, 0x07, 0x00, 
    0xff, 0x0f, 0x02, 0x12, 0x00, 0x00, 0x02, 0x04, 
    0x12, 0x00, 0x03, 0x09, 0x06, 0x01, 0x00, 0x02, 
    0x07, 0x00, 0xff, 0x0f, 0x02, 0x12, 0x00, 0x00, 
    0x02, 0x04, 0x12, 0x00, 0x03, 0x09, 0x06, 0x01, 
    0x01, 0x01, 0x08, 0x00, 0xff, 0x0f, 0x02, 0x12, 
    0x00, 0x00, 0x02, 0x04, 0x12, 0x00, 0x03, 0x09, 
    0x06, 0x01, 0x01, 0x02, 0x08, 0x00, 0xff, 0x0f, 
    0x02, 0x12, 0x00, 0x00, 0x02, 0x04, 0x12, 0x00, 
    0x03, 0x09, 0x06, 0x01, 0x01, 0x05, 0x08, 0x00, 
    0xff, 0x0f, 0x02, 0x12, 0x00, 0x00, 0x02, 0x04, 
    0x12, 0x00, 0x03, 0x09, 0x06, 0x01, 0x01, 0x06, 
    0x08, 0x00, 0xff, 0x0f, 0x02, 0x12, 0x00, 0x00, 
    0x02, 0x04, 0x12, 0x00, 0x03, 0x09, 0x06, 0x01, 
    0x01, 0x07, 0x08, 0x00, 0xff, 0x0f, 0x02, 0x12, 
    0x00, 0x00, 0x02, 0x04, 0x12, 0x00, 0x03, 0x09, 
    0x06, 0x01, 0x01, 0x08, 0x08, 0x00, 0xff, 0x0f, 
    0x02, 0x12, 0x00, 0x00, 0x02, 0x04, 0x12, 0x00, 
    0x03, 0x09, 0x06, 0x01, 0x00, 0x82, 0x07, 0x00, 
    0xff, 0x0f, 0x02, 0x12, 0x00, 0x00, 0x02, 0x04, 
    0x12, 0x00, 0x03, 0x09, 0x06, 0x01, 0x00, 0x1f, 
    0x07, 0x00, 0xff, 0x0f, 0x02, 0x12, 0x00, 0x00, 
    0x02, 0x04, 0x12, 0x00, 0x03, 0x09, 0x06, 0x01, 
    0x00, 0x33, 0x07, 0x00, 0xff, 0x0f, 0x02, 0x12, 
    0x00, 0x00, 0x02, 0x04, 0x12, 0x00, 0x03, 0x09, 
    0x06, 0x01, 0x00, 0x47, 0x07, 0x00, 0xff, 0x0f, 
    0x02, 0x12, 0x00, 0x00, 0x09, 0x06, 0x00, 0x08, 
    0x19, 0x09, 0x00, 0xff, 0x09, 0x08, 0x36, 0x30, 
    0x32, 0x32, 0x32, 0x39, 0x39, 0x39, 0x06, 0x00, 
    0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0x00, 0x00, 
    0x06, 0x00, 0x00, 0x00, 0x95, 0x06, 0x00, 0x00, 
    0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 
    0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 
    0x00, 0x06, 0x00, 0x00, 0x00, 0x52, 0x06, 0x00, 
    0x00, 0x00, 0x0b, 0x12, 0x00, 0x0b, 0x12, 0x00, 
    0x00, 0x12, 0x00, 0x00
};

void leak_gbt_frame_handler(const uint8_t *data, size_t const length) {
    
    TEST_MESSAGE("GBT Frame Received");
}

void test_gbt_leaks()
{
    for (size_t i = 0; i <  TEST_MEMORY_LOOPS; i++)
    {
        auto* gbt = new Gbt(&leak_gbt_frame_handler);

        delete gbt;
    }
}

void test_log_leaks()
{
    for (size_t i = 0; i <  TEST_MEMORY_LOOPS; i++)
    {
        MyLog::log("UNIT", "Test Log Message %i", i);
    }
}

void test_logHex_leaks()
{
    for (size_t i = 0; i <  TEST_MEMORY_LOOPS; i++)
    {
        MyLog::logHex("UNIT", "Test Log Message", gbtArray2, GBTARRAY_SIZE);
    }
}


void test_memory_leaks()
{
    test_gbt_leaks();
    test_log_leaks();
    test_logHex_leaks();

    TEST_MESSAGE("Memory Leak Test Complete");
}

